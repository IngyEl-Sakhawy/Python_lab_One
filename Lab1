#!/usr/bin/env python3
print("hello from python")

# 1- Write a Python program which accepts the user's first and last name and print them in
# reverse order with a space between them.

# user_input = input("Enter something: ")
# lis = list(user_input)
# lis.reverse()
# reversed_input = ''.join(lis)
# print("Your name in reverse is " , reversed_input)


# 2- Write a Python program that accepts an integer (n) and computes the value of
# n+nn+nnn.
# Sample value of n is 5
# Expected Result : 615

# def generate_Formula(val):
#     val = int(val)
#     return val+(val*val)+(val*val*val)

# num=input("Enter a number:")

# print("Result:", generate_Formula(num))



# 3- Write a Python program to print the following here document.
# Sample string :
# a string that you "don't" have to escape
# This
# is a ....... multi-line
# heredoc string -------- > example

# print("a string that you \"don't\" have to escape")
# print("This")
# print("is a ....... multi-line")
# print("heredoc string -------- > example")

# 4- Write a Python program to get the volume of a sphere with radius 6.

# import math

# def get_volume(radius):
#     volume= (4/3) * math.pi * int(radius) ** 3
#     return volume
# radius = input("Enter a radius")
# print("The volume of the sphear is ",get_volume(radius))

# 5- Write a Python program that will accept the base and height of a triangle and compute
# the area.
# def Triangle_Area(base, hight):
#     area = (1/2)*int(base)*int(hight)
#     return area

# base = input("Enter the base:")
# hight = input("Enter the hight")

# result=Triangle_Area(base,hight)
# print("The area is ", result)


# 6- Write a Python program to construct the following pattern, using a nested for loop.
# Search about method
# end=""
# *

# for i in range(1,6) :
#     n="*"*i
#     print(n)

# for i in range(5,0,-1):
#     n="*"*i
#     print(n)



# 7- Write a Python program that accepts a word from the user and reverse it.

# word = input("Enter a word:")
# reversedword = list(word)
# reversedword.reverse()
# result = ''.join(reversedword)
# print("The word reversed :", result)

# 8- Write a Python program that prints all the numbers from 0 to 6 except 3 and 6.

# for i in range(0,6):
#     if(i%3 != 0 ):
#         print(i)

# 9-Write a Python program to get the Fibonacci series between 0 to 50
# Note : The Fibonacci Sequence is the series of numbers :
# 0, 1, 1, 2, 3, 5, 8, 13, 21, ....
# Every next number is found by adding up the two numbers before it.
# Expected Output : 1 1 2 3 5 8 13 21 34

# lis = list()

# for i in range(0,50):
#     if i == 0 or i==1:
#         lis.append(i)
#     else:
#         lis.append(lis[i-2]+lis[i-1])

# print(lis)

# 10- Write a Python program that accepts a string and calculate the number of digits and
# letters.

# string = input("Enter a sentence:")
# lis_of_string = list(string)
# result= len(lis_of_string)
# print("Count is ", result)

# 1- Given a list of numbers, create a function that returns a list where all similar adjacent
# elements have been reduced to a single element, so [1,2,3.3] returns [1,2,3]
# Note:
# You may create a new list or modify the passed in list.

s=set()

lis=[1,2,3,3]
for i in lis:
    s.add(i)

print(s)


# 2- Consider dividing a string into two halves
# Case1:
# The length is even, the front and back halves are the same length.

# Case2:
# The length is odd, we'll say that the extra char goes in the front half.
# E.g. 'abced', the front half is 'abc', the back half'de.

# Given 2 strings, a and b, return a string of the form:
# (a-front + b-front) + (a-back +b-back)

# def divide_strings(a, b):
#     def calculate_halves(s):
#         middle = len(s) // 2
#         front = s[:middle]
#         back = s[middle:]
#         return front, back

#     a_front, a_back = calculate_halves(a)
#     b_front, b_back = calculate_halves(b)

#     result = f"({a_front + b_front}) + ({a_back + b_back})"
#     return result

# a = "abcd"
# b = "efghi"
# print(divide_strings(a, b))


# 3- Write a Python function that takes a sequence of numbers and determines

# whether all the numbers are different from each other.
# E.X. [1,5,7,9] -> True
# [2,4,5,5,7,9] -> False

# s = set()
# lis=[1,2,3,3]

# for i in lis:
#     if i in s:
#         return False
#     else:
#         s.add(i)
# return True


# 4- Given unordered list, sort it using algorithm bubble sort
# ( read about bubble sort and try to implement it)

# def bubble_sort(arr):
#     n = len(arr)
#     for i in range(n):
#         for j in range(0, n-i-1):
#             if arr[j] > arr[j+1]:
#                 arr[j], arr[j+1] = arr[j+1], arr[j]


# 5- Gusses game
# . Your game generates a random number and gives only 10 tries for the user to
# guess that number.
# . Get a user input and compare it with the random number
# . Display a hit message to the user in case the use number is smaller or bigger of
# the random number
# . If the user type number is out of range(100), display a message that is not allowed
# and don't count this as try.
# . If user type a number that has been entered before, display a hint message and
# don't count this as try
# . In case the user entered a correct number within the 10 tries, display a
# congratulations message and let your application guess another random number
# with the remain number of tries
# . If the user finishes all his tries, display a message to ask him if he wants to play
# again or not.

# import random
# def guessing_game():
#     random_number = random.randint(1, 100)
#     tries = 10
#     guessed_numbers = set()

#     while tries > 0:
#         user_input = input("Enter your guess (1-100): ")
#         try:
#             guess = int(user_input)
#             if guess < 1 or guess > 100:
#                 print("Number out of range! Please enter a number between 1 and 100.")
#                 continue
#             if guess in guessed_numbers:
#                 print("You already guessed this number! Try a different one.")
#                 continue
#             guessed_numbers.add(guess)
#             tries -= 1

#             if guess == random_number:
#                 print("Congratulations! You guessed the correct number.")
#                 play_again = input("Do you want to play again? (yes/no): ")
#                 if play_again.lower() == "yes":
#                     random_number = random.randint(1, 100)
#                     tries = 10
#                     guessed_numbers.clear()
#                     continue
#                 else:
#                     print("Thank you for playing!")
#                     return
#             elif guess < random_number:
#                 print("Your guess is too low.")
#             else:
#                 print("Your guess is too high.")
#         except ValueError:
#             print("Invalid input! Please enter a valid number.")

#     print("Sorry, you have run out of tries. The correct number was:", random_number)
#     play_again = input("Do you want to play again? (yes/no): ")
#     if play_again.lower() == "yes":
#         guessing_game()
#     else:
#         print("Thank you for playing!")


# arr = [64, 34, 25, 12, 22, 11, 90]

# bubble_sort(arr)
# print("Sorted array:", arr)

# guessing_game()

# 6- Make account on Hacker-rank for problem solving
# (bonus)
# And try to solve this problem and send me your submission

# https://www.hackerrank.com/challenges/diagonal-difference/problem
